{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst startBtn = document.getElementById('start-button');\nconst datetimePicker = document.getElementById('datetime-picker');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    startBtn.disabled = !(userSelectedDate > currentDate);\n    if (userSelectedDate <= currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a future date.',\n        position: 'topRight',\n      });\n      return;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartBtn.addEventListener('click', () => {\n  const currentDate = new Date();\n  let timeLeft = userSelectedDate - currentDate;\n\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  const timerInterval = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent =\n      addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent =\n      addLeadingZero(seconds);\n\n    timeLeft -= 1000;\n\n    if (timeLeft < 0) {\n      clearInterval(timerInterval);\n      datetimePicker.disabled = false;\n    }\n  }, 1000);\n});\n"],"names":["userSelectedDate","startBtn","datetimePicker","options","selectedDates","currentDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timeLeft","timerInterval"],"mappings":"0IAKA,IAAIA,EACJ,MAAMC,EAAW,SAAS,eAAe,cAAc,EACjDC,EAAiB,SAAS,eAAe,iBAAiB,EAE1DC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAClC,MAAMC,EAAc,IAAI,KAExB,GADAJ,EAAS,SAAW,EAAED,EAAmBK,GACrCL,GAAoBK,EAAa,CACnCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+BACT,SAAU,UAClB,CAAO,EACD,MACD,CACF,CACH,EAEAC,EAAUL,EAAgBC,CAAO,EAEjC,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAd,EAAS,iBAAiB,QAAS,IAAM,CAEvC,IAAIe,EAAWhB,EADK,IAAI,KAGxBC,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1B,MAAMe,EAAgB,YAAY,IAAM,CACtC,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,YAAcF,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,EAExBG,GAAY,IAERA,EAAW,IACb,cAAcC,CAAa,EAC3Bf,EAAe,SAAW,GAE7B,EAAE,GAAI,CACT,CAAC"}